<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Coders</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-08-05T02:22:34.653Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Xiaoxu Cheng</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2021/08/17/hello-world/"/>
    <id>http://yoursite.com/2021/08/17/hello-world/</id>
    <published>2021-08-17T02:44:21.252Z</published>
    <updated>2019-08-05T02:22:34.653Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>个人生活-出差</title>
    <link href="http://yoursite.com/2020/01/06/sheng-onelog/"/>
    <id>http://yoursite.com/2020/01/06/sheng-onelog/</id>
    <published>2020-01-06T04:09:00.000Z</published>
    <updated>2020-04-18T03:18:36.524Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-第一次出差郑州"><a href="#1-第一次出差郑州" class="headerlink" title="1.第一次出差郑州"></a>1.第一次出差郑州</h3><hr><p>&emsp;&emsp;这是我工作多年 第一次出差 目的地河南-&gt;郑州 hhhhh 还是无比的开心 但是有点儿累人 赶车没赶上</p><p>&emsp;&emsp;先简单介绍一下我的路程······ </p><a id="more"></a><hr><h3 id="2-路程"><a href="#2-路程" class="headerlink" title="2.路程"></a>2.路程</h3><hr><p>&emsp;&emsp;单位 武清 出发-&gt;武清站-&gt;天津站-&gt;天津站-&gt;郑州东</p><p>&emsp;&emsp;时间：早7点 - 中12.30到  不得不服 中国得高铁之快 ！ 奥力给！！！</p><p>上图：</p><p>河南烩面 （真的不错，和我们老家的刀削面有的一拼！奥力给！）<br><img src="http://setbo.ekangcn.com/life1.jpg" alt="image"></p><p>。。。。。。 接下来就是疫情</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;1-第一次出差郑州&quot;&gt;&lt;a href=&quot;#1-第一次出差郑州&quot; class=&quot;headerlink&quot; title=&quot;1.第一次出差郑州&quot;&gt;&lt;/a&gt;1.第一次出差郑州&lt;/h3&gt;&lt;hr&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;这是我工作多年 第一次出差 目的地河南-&amp;gt;郑州 hhhhh 还是无比的开心 但是有点儿累人 赶车没赶上&lt;/p&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;先简单介绍一下我的路程······ &lt;/p&gt;
    
    </summary>
    
      <category term="My Life(个人生活)" scheme="http://yoursite.com/categories/My-Life-%E4%B8%AA%E4%BA%BA%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="出差" scheme="http://yoursite.com/tags/%E5%87%BA%E5%B7%AE/"/>
    
  </entry>
  
  <entry>
    <title>PHP 中文按照拼音字母排序实现方式</title>
    <link href="http://yoursite.com/2019/12/06/php-one-php/"/>
    <id>http://yoursite.com/2019/12/06/php-one-php/</id>
    <published>2019-12-06T03:39:18.000Z</published>
    <updated>2019-12-06T03:49:40.959Z</updated>
    
    <content type="html"><![CDATA[<h3 id="汉字按首字母排序（JAVASCRIPT，PHP，MYSQL实现）"><a href="#汉字按首字母排序（JAVASCRIPT，PHP，MYSQL实现）" class="headerlink" title="汉字按首字母排序（JAVASCRIPT，PHP，MYSQL实现）"></a>汉字按首字母排序（JAVASCRIPT，PHP，MYSQL实现）</h3><hr><h4 id="1-javascript实现"><a href="#1-javascript实现" class="headerlink" title="1.javascript实现"></a>1.javascript实现</h4><a id="more"></a><ul><li><p>注意： 指定排序函数时，和当前系统的区域设置有关系，如果是按照别的区域设置排序，可改。firefox下通过，360不支持。</p><pre><code>var a = [&quot;啊&quot;,&quot;得啊_123&quot;,&quot;得啊_0124&quot;,&quot;波啊&quot;,&quot;婆&quot;];a.sort();  //原始数据排序      a.sort(function(a,b){return a.localeCompare(b)});      //指定排序函数</code></pre></li></ul><h4 id="2-php实现"><a href="#2-php实现" class="headerlink" title="2. php实现"></a>2. php实现</h4><ul><li><p>网络上很多php的工具类可以将汉字转为拼音；</p></li><li><p>将拼音进行排序即可</p></li><li><p>另一种则是类似mysql转码方式：</p><pre><code>foreach ($array as $key=&gt;$value)  {  $new_array[$key] = iconv(&apos;UTF-8&apos;, &apos;GBK&apos;, $value);  }  asort($new_array);  foreach ($new_array as $key=&gt;$value)  {  $array[$key] = iconv(&apos;GBK&apos;, &apos;UTF-8&apos;, $value);  }  </code></pre></li></ul><h4 id="3-mysql实现"><a href="#3-mysql实现" class="headerlink" title="3.mysql实现"></a>3.mysql实现</h4><ul><li><p>如果当前数据库编码是utf-8，则进行转码，转为gbk，gbk默认汉字按照拼音排序存放：</p><pre><code>SELECT * FROM　USER　ORDER BY convert(uname using gbk) ASC</code></pre></li><li><p>如果当前编码为gbk则：</p><pre><code>SELECT ＊ FROM USER ORDER BY uname ASC</code></pre></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;汉字按首字母排序（JAVASCRIPT，PHP，MYSQL实现）&quot;&gt;&lt;a href=&quot;#汉字按首字母排序（JAVASCRIPT，PHP，MYSQL实现）&quot; class=&quot;headerlink&quot; title=&quot;汉字按首字母排序（JAVASCRIPT，PHP，MYSQL实现）&quot;&gt;&lt;/a&gt;汉字按首字母排序（JAVASCRIPT，PHP，MYSQL实现）&lt;/h3&gt;&lt;hr&gt;
&lt;h4 id=&quot;1-javascript实现&quot;&gt;&lt;a href=&quot;#1-javascript实现&quot; class=&quot;headerlink&quot; title=&quot;1.javascript实现&quot;&gt;&lt;/a&gt;1.javascript实现&lt;/h4&gt;
    
    </summary>
    
      <category term="PHP" scheme="http://yoursite.com/categories/PHP/"/>
    
    
      <category term="PHP" scheme="http://yoursite.com/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>Laravel 打印SQL语句</title>
    <link href="http://yoursite.com/2019/12/04/php-laravel-one/"/>
    <id>http://yoursite.com/2019/12/04/php-laravel-one/</id>
    <published>2019-12-04T06:37:46.000Z</published>
    <updated>2019-12-04T06:43:53.389Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Laravel-打印SQL语句"><a href="#Laravel-打印SQL语句" class="headerlink" title="Laravel 打印SQL语句"></a>Laravel 打印SQL语句</h3><hr><h5 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h5><p>整理PHP框架 Laravel中平常用到得例子</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">DB::connection()-&gt;enableQueryLog();#开启执行日志</span><br><span class="line">$a = self::where([&apos;investorid&apos;=&gt;$id])-&gt;whereBetween(&apos;inserttime&apos;,[$start,$end])-&gt;where(&apos;deposit&apos;,&apos;&gt;&apos;,0)-&gt;orderBy(&apos;id&apos;,&apos;asc&apos;)-&gt;Paginate(20);</span><br><span class="line">print_r(DB::getQueryLog());   //获取查询语句、参数和执行时间</span><br></pre></td></tr></table></figure><hr>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Laravel-打印SQL语句&quot;&gt;&lt;a href=&quot;#Laravel-打印SQL语句&quot; class=&quot;headerlink&quot; title=&quot;Laravel 打印SQL语句&quot;&gt;&lt;/a&gt;Laravel 打印SQL语句&lt;/h3&gt;&lt;hr&gt;
&lt;h5 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h5&gt;&lt;p&gt;整理PHP框架 Laravel中平常用到得例子&lt;/p&gt;
    
    </summary>
    
      <category term="PHP&amp;Laravel" scheme="http://yoursite.com/categories/PHP-Laravel/"/>
    
    
      <category term="PHP&amp;Laravel" scheme="http://yoursite.com/tags/PHP-Laravel/"/>
    
  </entry>
  
  <entry>
    <title>Hexo开启打赏功能</title>
    <link href="http://yoursite.com/2019/12/04/hexo-one-blog/"/>
    <id>http://yoursite.com/2019/12/04/hexo-one-blog/</id>
    <published>2019-12-04T03:06:00.000Z</published>
    <updated>2019-12-04T06:44:43.563Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Hexo的next主题打赏"><a href="#Hexo的next主题打赏" class="headerlink" title="Hexo的next主题打赏"></a>Hexo的next主题打赏</h3><hr><h5 id="增加打赏配置"><a href="#增加打赏配置" class="headerlink" title="增加打赏配置"></a>增加打赏配置</h5><a id="more"></a><hr><ul><li><p>1、准备支付宝和微信二维码</p><ul><li>微信生成二维码教程<a href="https://jingyan.baidu.com/article/b907e627b641b646e6891c6b.html" target="_blank" rel="noopener">地址</a></li><li>支付宝生成二维码<a href="https://jingyan.baidu.com/article/e2284b2b9e5328e2e7118d48.html" target="_blank" rel="noopener">地址</a></li></ul></li><li><p>2、在_config.yml中配置图片</p><pre><code>reward_comment: 坚持原创技术分享，您的支持将鼓励我继续创作！wechatpay: /images/wechat.jpgalipay: /images/aipay.png</code></pre></li></ul><p>注意：wechat.jpg、aipay.png图片放入themes/next/source/images中</p><ul><li><p>3、修复煽动bug</p><pre><code>地址：修改next/source/css/_common/components/post/post-reward.styl，注释wechat:hover和alipay:hover/* 注释文字闪动函数#wechat:hover p{animation: roll 0.1s infinite linear;-webkit-animation: roll 0.1s infinite linear;-moz-animation: roll 0.1s infinite linear;}#alipay:hover p{animation: roll 0.1s infinite linear;-webkit-animation: roll 0.1s infinite linear;-moz-animation: roll 0.1s infinite linear;}*/</code></pre></li><li><p>4、效果</p></li></ul><p><img src="http://setbo.ekangcn.com/pay.png" alt="image"></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Hexo的next主题打赏&quot;&gt;&lt;a href=&quot;#Hexo的next主题打赏&quot; class=&quot;headerlink&quot; title=&quot;Hexo的next主题打赏&quot;&gt;&lt;/a&gt;Hexo的next主题打赏&lt;/h3&gt;&lt;hr&gt;
&lt;h5 id=&quot;增加打赏配置&quot;&gt;&lt;a href=&quot;#增加打赏配置&quot; class=&quot;headerlink&quot; title=&quot;增加打赏配置&quot;&gt;&lt;/a&gt;增加打赏配置&lt;/h5&gt;
    
    </summary>
    
      <category term="Hexo" scheme="http://yoursite.com/categories/Hexo/"/>
    
    
      <category term="Hexo开启打赏" scheme="http://yoursite.com/tags/Hexo%E5%BC%80%E5%90%AF%E6%89%93%E8%B5%8F/"/>
    
  </entry>
  
  <entry>
    <title>个人生活-骑机车</title>
    <link href="http://yoursite.com/2019/11/06/mmy-life-moto/"/>
    <id>http://yoursite.com/2019/11/06/mmy-life-moto/</id>
    <published>2019-11-06T03:28:22.000Z</published>
    <updated>2019-11-06T06:51:15.784Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-第一次接触机车"><a href="#1-第一次接触机车" class="headerlink" title="1.第一次接触机车"></a>1.第一次接触机车</h3><hr><p>&emsp;&emsp;当时和我哥（结拜兄弟）一起玩过机车所以就有所接触,我哥也是多才多艺之人，有时间多给你们介绍介绍 目前他单身 性格很好 人非常不错 不是我吹牛逼！！！</p><p>&emsp;&emsp;回老家看望我姥爷 当时夏天 天气也不错 我哥骑着他的MOTO 载着我一起去。回来的路上感觉不错 就和我哥提意我要骑上试试 这一试不要紧 试了就感觉骑上很自由 我感觉我瞧不上其他人 膨胀了 哈哈哈哈~ 然后回北京 开始我的机车纪元······ </p><a id="more"></a><hr><h3 id="2-北京机车纪元"><a href="#2-北京机车纪元" class="headerlink" title="2.北京机车纪元"></a>2.北京机车纪元</h3><hr><h4 id="2-1-买小蓝（机车）（17年6月）"><a href="#2-1-买小蓝（机车）（17年6月）" class="headerlink" title="2.1 买小蓝（机车）（17年6月）"></a>2.1 买小蓝（机车）（17年6月）</h4><p>&emsp;&emsp;我在17年6.18买的铃木GSX-250R当时第几批车 我也忘记了 交了800押金（整车3W多一点儿 加上车牌费+保险） 等了一个多月 差不多！！！ 最后通知我去提车，给我激动坏了 ！！！(这里有一个雷，我下面会说到。我目前试C1驾照，如果你没有驾驶证我建议你去考一个D（三轮包含两轮）或者E（两轮不包含三轮）都可以，如果你有驾驶证 建议你增驾要不然你会像我一样 我下面说到。不要做没把握的事情嚄。)</p><p>附图：</p><p>订单图<br><img src="http://setbo.ekangcn.com/moto12.png" alt="image"><br>机车图<br><img src="http://setbo.ekangcn.com/moto2.jpg" alt="image"><br><img src="http://setbo.ekangcn.com/moto5.jpg" alt="image"><br><img src="http://setbo.ekangcn.com/moto4.jpg" alt="image"> </p><hr><h4 id="2-2-加入百邦机车车队（17年8月）"><a href="#2-2-加入百邦机车车队（17年8月）" class="headerlink" title="2.2 加入百邦机车车队（17年8月）"></a>2.2 加入百邦机车车队（17年8月）</h4><p>&emsp;&emsp;当时我阴差阳错的找到了车队  一起玩车  一起玩耍 一起吹牛逼 ！！！一起捏脚O(∩_∩)O (￣▽￣)” ！！！<br>附图：</p><p><img src="http://setbo.ekangcn.com/moto1.jpg" alt="image"><br><img src="http://setbo.ekangcn.com/moto3.jpg" alt="image"><br><img src="http://setbo.ekangcn.com/moto6.jpg" alt="image"><br><img src="http://setbo.ekangcn.com/moto7.jpg" alt="image"><br><img src="http://setbo.ekangcn.com/moto8.jpg" alt="image"></p><hr><h4 id="2-3-人生第一骑（17年10月）"><a href="#2-3-人生第一骑（17年10月）" class="headerlink" title="2.3 人生第一骑（17年10月）"></a>2.3 人生第一骑（17年10月）</h4><p>&emsp;&emsp;我当时没本 心理还年轻 突然有天晚上冒出一个想法 骑车回家 ！！！ <del>卧槽</del> 我当时脑子可能被驴踢了 说干就干  10.1日 中午12点出发 从北京-大同 骑了整整 7个小时才到家 到家已经晚上 7-8点了 我妈不知道我要骑车回去 当我踏入家里的那一刻 我妈流泪了 இ௰இ 说：”儿子！你把妈吓得心脏都受不了！！！”；和我妈唠了一晚上 就那样疲惫得睡着了 ！第二天我就骑着我心爱de小摩托 出去装逼去了 由于我老家也是路游景点（北岳恒山、悬空寺、大同古城）一个北京四轮车牌摇下窗 问我哥们 你哪儿得人 我说本地人（可能因为我机车上得京B牌照他才问我） 问我怎么来得 我说从北京骑过来得 那哥们说 “兄弟，牛逼！！！” 把我高兴坏了！！！ 我就继续去装逼了 由于GSX刚出没两年 我可能是我们县城 里面第一辆GSX 说真的很骄傲 我第一次觉得 骑车比开车自由 ！！！<br>附图：</p><p>老家风景照：<br><img src="http://setbo.ekangcn.com/moto13.jpg" alt="image"></p><hr><h4 id="2-3-交通违法（18年4月）"><a href="#2-3-交通违法（18年4月）" class="headerlink" title="2.3 交通违法（18年4月）"></a>2.3 交通违法（18年4月）</h4><p>&emsp;&emsp;当时送同事晚上回家吃饭  没想到遇到查酒驾的  我估摸着查酒驾也不会查摩托车 刚到桥下就被交警拦下 吃了罚单 被记14分（驾驶不符12分 没带驾照1分 还多扣了1分 <del>尼玛我当时心理MMP</del> 罚款2000 连续学习一周）经历了各种磨难 终于重新拿到驾照了 ┭┮﹏┭┮<del>~</del>！！！就这样开开心心骑了一年 买车了 ！</p><p>附图：<br><img src="http://setbo.ekangcn.com/moto13.png" alt="image"></p><hr><h4 id="2-4-卖小蓝（车机-（18年11月15日）"><a href="#2-4-卖小蓝（车机-（18年11月15日）" class="headerlink" title="2.4 卖小蓝（车机)（18年11月15日）"></a>2.4 卖小蓝（车机)（18年11月15日）</h4><p>&emsp;&emsp;当时快冬天了 自己攒点儿小钱回老家买一辆四轮 我就把小蓝封车了 刚好买车钱也不够 决定牺牲我心爱的小蓝 本来不想卖车贩子 但是由于我一时疏忽 被车贩子给玩了 卖了小蓝当天晚上我内心说不出得心情复杂。在我手里也玩坏了他 <del>也不知道它现在在谁的胯下受辱</del> 也许这也是我青春得一部分 现在老了玩不动了 如果再来 我也不后悔选择机车 以后还能和我子女吹吹牛逼！！！(￣▽￣)”  我拥有过小蓝我也无怨无悔和它经历也很多 也是我人生第一辆车 愿你们都能骑上自己心爱的小摩托 骚年么加油！！！</p><p>附图：</p><p>小蓝被卖图：<br><img src="http://setbo.ekangcn.com/moto14_gai.jpg" alt="image"></p><hr>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;1-第一次接触机车&quot;&gt;&lt;a href=&quot;#1-第一次接触机车&quot; class=&quot;headerlink&quot; title=&quot;1.第一次接触机车&quot;&gt;&lt;/a&gt;1.第一次接触机车&lt;/h3&gt;&lt;hr&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;当时和我哥（结拜兄弟）一起玩过机车所以就有所接触,我哥也是多才多艺之人，有时间多给你们介绍介绍 目前他单身 性格很好 人非常不错 不是我吹牛逼！！！&lt;/p&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;回老家看望我姥爷 当时夏天 天气也不错 我哥骑着他的MOTO 载着我一起去。回来的路上感觉不错 就和我哥提意我要骑上试试 这一试不要紧 试了就感觉骑上很自由 我感觉我瞧不上其他人 膨胀了 哈哈哈哈~ 然后回北京 开始我的机车纪元······ &lt;/p&gt;
    
    </summary>
    
      <category term="My Life(个人生活)" scheme="http://yoursite.com/categories/My-Life-%E4%B8%AA%E4%BA%BA%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="moto(机车)" scheme="http://yoursite.com/tags/moto-%E6%9C%BA%E8%BD%A6/"/>
    
  </entry>
  
  <entry>
    <title>DeDecms主要目录结构</title>
    <link href="http://yoursite.com/2019/10/01/my-phpfour-logs/"/>
    <id>http://yoursite.com/2019/10/01/my-phpfour-logs/</id>
    <published>2019-10-01T01:48:46.000Z</published>
    <updated>2019-12-04T06:45:37.369Z</updated>
    
    <content type="html"><![CDATA[<h1 id="简要说明"><a href="#简要说明" class="headerlink" title="简要说明"></a>简要说明</h1><hr><p>根目录 /dede 管理后台目录 /freelist 自由文档列表生成目录 /html 默认文章生成目录 /include 程序核心文件目录 /member 会员管理目录 /plus 插件及辅助功能目录 /setup 安装目录 /special 专题生成目录 /templets 默认模板存放目录 /upimg 上传下载文件保</p><a id="more"></a><h3 id="1-根目录"><a href="#1-根目录" class="headerlink" title="1. 根目录"></a>1. 根目录</h3><hr><p>&emsp;&emsp;<br>根目录<br>/dede    管理后台目录<br>/freelist    自由文档列表生成目录<br>/html    默认文章生成目录<br>/include    程序核心文件目录<br>/member    会员管理目录<br>/plus    插件及辅助功能目录<br>/setup    安装目录<br>/special    专题生成目录<br>/templets    默认模板存放目录<br>/upimg    上传下载文件保存目录<br>base.css    基本样式表<br>index.php    网站默认首页<br>robots.txt    搜索控制文件 </p><h3 id="2-templets模板目录"><a href="#2-templets模板目录" class="headerlink" title="2. templets模板目录"></a>2. templets模板目录</h3><hr><p>/dedecmsv31    3模板目录<br>/default    默认模板目录<br>article_article.htm    普通文章页面模板<br>article_default.htm    一般文档页面模板<br>article_flash.htm    flash页面模板<br>article_image.htm    图集页面模板<br>article_soft.htm    软件页面模板<br>article_spec.htm    专题页面模板<br>index.htm    网站首页模板<br>index_article.htm    文章频道封面模板<br>index_article_webart1.htm<br>index_article_webart2.htm<br>index_article_webart.htm<br>index_default.htm    一般文档封面模板<br>index_flash.htm    flash频道封面模板<br>index_image.htm    图集频道封面模板<br>index_soft.htm    软件频道封面模板<br>list_article.htm    文章列表模板<br>list_default.htm    一般文档列表目录模板<br>list_flash.htm    flash文档列表模板<br>list_free.htm    自由列表模板<br>list_image.htm    图集列表模板<br>list_soft.htm    软件列表模板<br>list_spec.htm    专题列表模板<br>/img    模板图片目录（含样式表）<br>/plus    辅助插件模板目录<br>download_links_templet.htm    下载链接模板<br>feedback_confirm.htm    评论确认模板<br>feedback_templet.htm    用户评论模板<br>feedback_templet_js.htm<br>flink-add.htm    友情链接添加模板<br>flink-list.htm    友情链接列表模板<br>guestbook.htm    留言本模板<br>heightsearch.htm    高级搜索模板<br>js.htm<br>recommend.htm    推荐好友模板<br>rss.htm    RSS的XML模板<br>rssmap.htm    RSS订阅文件<br>showphoto.htm    图片显示模板<br>sitemap.htm    网站地图模板<br>view_msg.htm    会员提示信息模板<br>vote.htm    投票结果显示模板<br>/system    系统模板目录<br>channel_list.htm    栏目列表系统模板<br>list_fulllist.htm    文档列表系统模板<br>mynews.htm    站内新闻系统模板<br>part_arclist.htm    文章列表系统模板<br>part_autochannel.htm    分类栏目系统模板<br>part_channelartlist.htm    包含文章列表的栏目系统模板<br>part_imginfolist.htm    使用imginfolist标签调用的模板<br>part_imglist.htm    使用imglist标签调用的模板<br>part_type_list.htm    单个栏目的系统模板<br>spec_arclist.htm    专题列表文章系统模板<br>spec_list.htm    专题用模板<br>tag_arclist.htm<br>tag_fieldlist.htm    fieldlist用系统模板<br>/system/channel    频道特殊底层模板目录<br>channel_downlinkpage.htm    下载地址列表链接模板<br>channel_downlinks.htm    下载地址列表模板<br>channel_spec_note.htm    专题节点列表模板 </p><h3 id="3-include目录-程序核心目录"><a href="#3-include目录-程序核心目录" class="headerlink" title="3. include目录  程序核心目录"></a>3. include目录  程序核心目录</h3><hr><p>config_base.php    环境定义文件。用于检测系统环境，定义工作目录，保存数据库链接信息，引入常用函数等，建议不要修改。<br>config_hand.php    系统配置文件。定义系统常用的配置信息定义，可从后台管理直接生成该文件。<br>config_passport.php    通行证文件<br>config_rglobals.php    检测系统外部变量<br>config_rglobals_magic.php    同上<br>inc_archives_view.php    用于浏览文档或对文档生成HTML<br>inc_arclist_view.php    用于浏览频道列表或对内容列表生成HTML<br>inc_arcmember_view.php    用于浏览会员发布的文档<br>inc_arcpart_view.php    用于解析和创建全局性质的模板，如频道封面，主页，单个页面等<br>inc_arcsearch_view.php    用于文档搜索<br>inc_arcspec_view.php    用于浏览所有专题列表或对专题列表生成HTML<br>inc_channel_unit.php    用户解析特定频道的附加数据结构信息<br>inc_channel_unit_functions.php    系统共用函数集合<br>inc_downclass.php    防采集随机字符串函数<br>inc_freelist_view.php    用于对特定内容列表生成HTML<br>inc_functions.php    可供用户使用的函数集合<br>inc_imgbt.php    GetTypeidSelMember<br>inc_memberlogin.php    用于用户登录及获得会员状态<br>inc_photograph.php    用于处理系统中的图片，例如水印，缩略图等<br>inc_photowatermark_config.php    图片处理参数定义<br>inc_rss_view.php    用于浏览频道RSS或对RSS生成静态文件<br>inc_separate_functions.php    SpGetArcList函数，用于获得文档列表<br>inc_sitemap.php    用于生成网站地图<br>inc_type_tree.php    用于选择栏目的目录树<br>inc_type_tree_member.php    同上，会员使用<br>inc_typelink.php    用于显示文章的位置和栏目位置等<br>inc_typeunit_admin.php    用于频道管理时的一些复杂操作，主要用于后台<br>inc_typeunit_menu.php    同上<br>inc_userlogin.php    用于管理员登录<br>inc_vote.php    用于管理投票<br>jump.php    用于超链接跳转<br>pub_charset.php    共用字符处理函数，GB/UTF-8/Unicode/BIG5等互换<br>pub_collection.php    用于采集<br>pub_collection_functions.php    采集用函数<br>pub_datalist.php    后台管理用数据列表<br>pub_datalist_dm.php    同上，不使用模板<br>pub_db_mysql.php    用于操作数据库<br>pub_dedehtml2.php    用于采集中的HTML解析<br>pub_dedehtml.php    HTML解析器<br>pub_dedetag.php    用于dede模板标签解析<br>pub_httpdown.php    用于下载http中的资源<br>pub_oxwindow.php    后台程序扩展<br>pub_splitword_<a href="http://www.php" target="_blank" rel="noopener">www.php</a>    织梦分词算法<br>validateimg.php    验证码<br>vdimgck.php    验证码 </p><h3 id="4-inc-共用函数目录"><a href="#4-inc-共用函数目录" class="headerlink" title="4. inc    共用函数目录"></a>4. inc    共用函数目录</h3><hr><p>inc_fun_funAdmin.php    获取拼音码等函数<br>inc_fun_funString.php    html代码处理等函数<br>inc_fun_SpGetArcList.php    获取文档列表SpGetArcList</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;简要说明&quot;&gt;&lt;a href=&quot;#简要说明&quot; class=&quot;headerlink&quot; title=&quot;简要说明&quot;&gt;&lt;/a&gt;简要说明&lt;/h1&gt;&lt;hr&gt;
&lt;p&gt;根目录 /dede 管理后台目录 /freelist 自由文档列表生成目录 /html 默认文章生成目录 /include 程序核心文件目录 /member 会员管理目录 /plus 插件及辅助功能目录 /setup 安装目录 /special 专题生成目录 /templets 默认模板存放目录 /upimg 上传下载文件保&lt;/p&gt;
    
    </summary>
    
      <category term="PHP&amp;DeDecms" scheme="http://yoursite.com/categories/PHP-DeDecms/"/>
    
    
      <category term="PHP&amp;DeDecms 文件目录" scheme="http://yoursite.com/tags/PHP-DeDecms-%E6%96%87%E4%BB%B6%E7%9B%AE%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>Laravel5.6定时任务</title>
    <link href="http://yoursite.com/2019/08/21/my-phpblog-blog/"/>
    <id>http://yoursite.com/2019/08/21/my-phpblog-blog/</id>
    <published>2019-08-21T06:29:45.000Z</published>
    <updated>2019-12-04T06:38:47.199Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-创建任务计划的主文件："><a href="#1-创建任务计划的主文件：" class="headerlink" title="1.创建任务计划的主文件："></a>1.创建任务计划的主文件：</h1><hr><p>&emsp;&emsp; 首先定位到网站根目录 这里分为两个版本架构命令</p><h5 id="1-1-Laravel5-1定时任务"><a href="#1-1-Laravel5-1定时任务" class="headerlink" title="1.1 Laravel5.1定时任务"></a>1.1 Laravel5.1定时任务</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php artisan make:console 名称</span><br></pre></td></tr></table></figure><a id="more"></a><h5 id="1-2-Laravel5-6定时任务"><a href="#1-2-Laravel5-6定时任务" class="headerlink" title="1.2 Laravel5.6定时任务"></a>1.2 Laravel5.6定时任务</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php artisan make:command 名称</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;这里我写的 <code>php artisan make:command AllConsole</code>;<br>&emsp;&emsp;也可以跟–command testconsole，这个就是命令的标识，加了的话待会儿在运行php artisan list的时候就可以看到这个命令，如果不加，看不到，但是照样可以执行。<br>执行以上命令之后，会生成如下文件，我的开发环境是win10，执行计划任务最后是在Linux上执行,Windows下面只要测试通过了就可以传到Linux下。<br>&emsp;&emsp;以下是命令执行完生成目录和文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">D:\phpStudy\PHPTutorial\WWW\laravel\blogone56\app\Console\Commands\AllConsole.php</span><br></pre></td></tr></table></figure><h1 id="2-进到这个文件，修改一下代码"><a href="#2-进到这个文件，修改一下代码" class="headerlink" title="2.进到这个文件，修改一下代码"></a>2.进到这个文件，修改一下代码</h1><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">namespace App\Console\Commands;</span><br><span class="line"></span><br><span class="line">use Illuminate\Console\Command;</span><br><span class="line">use Log;</span><br><span class="line">class AllConsole extends Command</span><br><span class="line">&#123;</span><br><span class="line">    /**</span><br><span class="line">     * The name and signature of the console command.</span><br><span class="line">     *</span><br><span class="line">     * @var string</span><br><span class="line">     */</span><br><span class="line">    protected $signature = &apos;testconsole&apos;;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * The console command description.</span><br><span class="line">     *</span><br><span class="line">     * @var string</span><br><span class="line">     */</span><br><span class="line">    protected $description = &apos;这是一个测试Laravel定时任务的描述&apos;;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Create a new command instance.</span><br><span class="line">     *</span><br><span class="line">     * @return void</span><br><span class="line">     */</span><br><span class="line">    public function __construct()</span><br><span class="line">    &#123;</span><br><span class="line">        parent::__construct();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Execute the console command.</span><br><span class="line">     *</span><br><span class="line">     * @return mixed</span><br><span class="line">     */</span><br><span class="line">    public function handle()</span><br><span class="line">    &#123;</span><br><span class="line">        //</span><br><span class="line">        Log::info(&apos;这是我写的log&apos;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;这个里面就三个参数，<br><strong>signature</strong>:信号的名字；<br><strong>description</strong>:任务描述；<br><strong>handle()</strong>:方法就是要执行的代码了，里面和写一般的controller方法一样，该引用的还是要引用；<br>我这里是写的一个定时写日志的测试；</p><h1 id="3-写定时器："><a href="#3-写定时器：" class="headerlink" title="3.写定时器："></a>3.写定时器：</h1><hr><p>&emsp;&emsp;进到D:\phpStudy\PHPTutorial\WWW\laravel\blogone56\app\Console\Kernel.php修改如下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">namespace App\Console;</span><br><span class="line"></span><br><span class="line">use Illuminate\Console\Scheduling\Schedule;</span><br><span class="line">use Illuminate\Foundation\Console\Kernel as ConsoleKernel;</span><br><span class="line"></span><br><span class="line">class Kernel extends ConsoleKernel</span><br><span class="line">&#123;</span><br><span class="line">    /**</span><br><span class="line">     * The Artisan commands provided by your application.</span><br><span class="line">     *</span><br><span class="line">     * @var array</span><br><span class="line">     */</span><br><span class="line">    protected $commands = [</span><br><span class="line">        //</span><br><span class="line">        Commands\AllConsole::class,</span><br><span class="line">    ];</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Define the application&apos;s command schedule.</span><br><span class="line">     *</span><br><span class="line">     * @param  \Illuminate\Console\Scheduling\Schedule  $schedule</span><br><span class="line">     * @return void</span><br><span class="line">     */</span><br><span class="line">    protected function schedule(Schedule $schedule)</span><br><span class="line">    &#123;</span><br><span class="line">        // $schedule-&gt;command(&apos;inspire&apos;)</span><br><span class="line">        //          -&gt;hourly();</span><br><span class="line">        $schedule-&gt;command(&apos;testconsole&apos;)-&gt;everyMinute();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Register the commands for the application.</span><br><span class="line">     *</span><br><span class="line">     * @return void</span><br><span class="line">     */</span><br><span class="line">    protected function commands()</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;load(__DIR__.&apos;/Commands&apos;);</span><br><span class="line"></span><br><span class="line">        require base_path(&apos;routes/console.php&apos;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>commands</strong>：里面需要把要用的定时任务的class都引进来；<br><strong>schedule</strong>：里面就可以定义执行的命令和执行的周期。<br>&emsp;&emsp;其他可用周期可以查看如下文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">D:\phpStudy\PHPTutorial\WWW\laravel\blogone56\vendor\laravel\framework\src\Illuminate\Console\Scheduling\Event.php</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;方法很多,这里就不重复了,进去一看就知道怎么用.</p><h1 id="4-下面我们就在windows下面测试一下能否正常执行"><a href="#4-下面我们就在windows下面测试一下能否正常执行" class="headerlink" title="4.下面我们就在windows下面测试一下能否正常执行:"></a>4.下面我们就在windows下面测试一下能否正常执行:</h1><hr><p>&emsp;&emsp;定位根目录输入命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php artisan testconsole</span><br></pre></td></tr></table></figure><p><img src="http://setbo.ekangcn.com/laravel.png" alt="image"></p><p>&emsp;&emsp;我在测试的方法里面没有进行输出,所以执行完命令之后没反应,但是我们直接去日志文件,可以看到我们的log信息已经写进去了,这表明任务计划代码没有问题,windows下面只能测试,真正执行任务计划要到linux下面去,windows下面也可以执行任务计划,但是比较繁琐,这里仅仅测试代码是否按照我们预想的执行.<br>&emsp;&emsp;日志目录:<br><img src="http://setbo.ekangcn.com/laravel1.png" alt="image"><br>&emsp;&emsp;执行结果如下:<br><img src="http://setbo.ekangcn.com/laravel2.png" alt="image"></p><h1 id="5-把代码推到linux下-编辑定时任务"><a href="#5-把代码推到linux下-编辑定时任务" class="headerlink" title="5.把代码推到linux下,编辑定时任务:"></a>5.把代码推到linux下,编辑定时任务:</h1><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo crontab -e</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;加入下面代码,就大功告成了:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">* * * * * /usr/bin/php /xxx/production/xxx/artisan schedule:run &gt;&gt; /dev/null 2&gt;&amp;1</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;下面这个可以静默执行，只输出你程序里面的结果,并把这些记录输出到一个指定的文件，这样的话你就可以看到哪一次没有被成功执行。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">* * * * * /usr/bin/php /xxx/production/xxx/artisan schedule:run -q &gt;&gt;/xxx/production/xxx/storage/logs/console.log  2&gt;&amp;1</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;上面的意思是用php去执行artisan里面的schedule:run这个命令,周期是每分钟都执行.<br>&emsp;&emsp;然后我们再去Laravel.log去看一下效果,如下:<br><img src="http://setbo.ekangcn.com/laravel3.jpg" alt="image"></p><p>&emsp;&emsp;出现这个说明任务计划已经正常执行了,每分钟被执行了一次.<br>&emsp;&emsp;到这里,Laravel的任务计划就是这样的了.</p><p><strong>但是还有一点疑问:我是不是需要每见一个计划任务就建个专门的命令和专门的文件?可不可以在一个文件里面写所有的任务计划?</strong></p><p>&emsp;&emsp;经过查找,发现解决方案了!以下的用法我在国内没有找到案例.<br>&emsp;&emsp;运行命令并把结果发送邮件:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$schedule-&gt;command(&apos;cache:clear&apos;)</span><br><span class="line">    -&gt;hourly()</span><br><span class="line">    -&gt;sendOutputTo($filePath)</span><br><span class="line">    -&gt;emailOutputTo(&apos;john@doe.com&apos;);</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;直接调用类里面的方法:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$schedule-&gt;call(&apos;SomeClass@method&apos;)-&gt;dailyAt(&apos;10:00&apos;);</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;闭包调用:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$schedule-&gt;call(function()&#123;</span><br><span class="line">    //.. </span><br><span class="line">&#125;)-&gt;everyThirtyMinutes();</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;命令行:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$schedule-&gt;terminal(&apos;gulp task&apos;)-&gt;fridays()-&gt;when(function()&#123; </span><br><span class="line">    return true;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;支持的时间:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">-&gt;hourly()</span><br><span class="line">-&gt;daily()</span><br><span class="line">-&gt;at($time) // 24 hour time</span><br><span class="line">-&gt;dailyAt($time)</span><br><span class="line">-&gt;twiceDaily()</span><br><span class="line">-&gt;weekdays()</span><br><span class="line">-&gt;mondays()</span><br><span class="line">-&gt;tuesdays()</span><br><span class="line">-&gt;wednesdays()</span><br><span class="line">-&gt;thursdays()</span><br><span class="line">-&gt;fridays()</span><br><span class="line">-&gt;saturdays()</span><br><span class="line">-&gt;sundays()</span><br><span class="line">-&gt;weekly()</span><br><span class="line">-&gt;weeklyOn($day, $time)</span><br><span class="line">-&gt;monthly()</span><br><span class="line">-&gt;yearly()</span><br><span class="line">-&gt;everyFiveMinutes()</span><br><span class="line">-&gt;everyTenMinutes()</span><br><span class="line">-&gt;everyThirtyMinutes()</span><br><span class="line">-&gt;days() // Days of the week.</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;1-创建任务计划的主文件：&quot;&gt;&lt;a href=&quot;#1-创建任务计划的主文件：&quot; class=&quot;headerlink&quot; title=&quot;1.创建任务计划的主文件：&quot;&gt;&lt;/a&gt;1.创建任务计划的主文件：&lt;/h1&gt;&lt;hr&gt;
&lt;p&gt;&amp;emsp;&amp;emsp; 首先定位到网站根目录 这里分为两个版本架构命令&lt;/p&gt;
&lt;h5 id=&quot;1-1-Laravel5-1定时任务&quot;&gt;&lt;a href=&quot;#1-1-Laravel5-1定时任务&quot; class=&quot;headerlink&quot; title=&quot;1.1 Laravel5.1定时任务&quot;&gt;&lt;/a&gt;1.1 Laravel5.1定时任务&lt;/h5&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;php artisan make:console 名称&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="PHP&amp;Laravel" scheme="http://yoursite.com/categories/PHP-Laravel/"/>
    
    
      <category term="PHP&amp;Laravel 5.6计划任务" scheme="http://yoursite.com/tags/PHP-Laravel-5-6%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1/"/>
    
  </entry>
  
  <entry>
    <title>史上最强PHP生成PDF文件,HTML转PDF文件方法</title>
    <link href="http://yoursite.com/2019/02/03/my-phpthree-blog/"/>
    <id>http://yoursite.com/2019/02/03/my-phpthree-blog/</id>
    <published>2019-02-03T08:04:00.000Z</published>
    <updated>2019-12-05T06:13:37.254Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><hr><p>&emsp;&emsp;之前有个客户需要把一些html页面生成pdf文件，然后我就找一些用php把html页面围成pdf文件的类。方法是可谓是找了很多很多，什么html2pdf,pdflib,FPDF这些都试过了，但是都没有达到我要的求。</p><a id="more"></a><p>&emsp;&emsp;pdflib,FPDF这两个方法是需要编写程序去生成pdf的，就也是讲不支持直接把html页面转换成pdf；html2pdf这个虽然可以把html页面转换成pdf文件，但是它只能转换一般简单的html代码，如果你的html内容要的是通过后台新闻编辑器排版的那肯定不行的。</p><p>&emsp;&emsp;纠结了半天，什么百度，谷歌搜索都用了，搜索了半天，功夫不负有心人，终于找到一个非常好用的方法了，下面就隆重介绍。</p><p>&emsp;&emsp;它就是：wkhtmltopdf，wkhtmltopdf可以直接把任何一个可以在浏览器中浏览的网页直接转换成一个pdf，首先说明一下它不是一个php类，而是一个把html页面转换成pdf的一个软件，但是它并不是一个简单的桌面软件，而且它直接cmd批处理的。而且php有个shell_exec()函数。下面就一步一步介绍如何用php来让它生成pdf文件的方法。</p><h3 id="1-下载并安装pdf"><a href="#1-下载并安装pdf" class="headerlink" title="1.下载并安装pdf"></a>1.下载并安装pdf</h3><hr><p>下载地址：<a href="http://code.google.com/p/wkhtmltopdf/downloads/list" target="_blank" rel="noopener">http://code.google.com/p/wkhtmltopdf/downloads/list</a><br>上面有各种平台下安装的安装包，英文不好的直接谷歌翻译一下。下面以 windows平台上使用举例，我的下载的是wkhtmltopdf-0.9.9-installer.exe这个版本，我在win7 32位64位和windows 2003上安装测试都没有问题的。下载好以后直接安装就可以了，注意安装路径要知道，下面会用到的。<br>安装好以后需要在系统环境变量变量名为”Path”的后添加：;C:Program Files (x86)wkhtmltopdf 也就是你安装的目录。安装好以后重启电脑。</p><h3 id="2-测试使用效果"><a href="#2-测试使用效果" class="headerlink" title="2.测试使用效果"></a>2.测试使用效果</h3><hr><p>直接在cmd里输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wkhtmltopdf http://www.shwzzz.cn/ F:website1.pdf</span><br></pre></td></tr></table></figure><p>第一个是：运行软件名称（这个是不变的） 第二个是网址 第三个是生成后的路径及文件名。回车后是不是看生一个生成进度条的提示呢，恭喜您已经成功了，到你的生成目录里看看是不是有一个刚生成的pdf文件呢。</p><h3 id="3-php里调用"><a href="#3-php里调用" class="headerlink" title="3.php里调用"></a>3.php里调用</h3><p>php里调用是很简单的，用<strong>shell_exec</strong>这个函数就可以了，如果<strong>shell_exec</strong>函数不能用看看<code>php.ini</code>里是否补禁用了。<br>举例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php shell_exec(&quot;wkhtmltopdf http://www.shwzzz.cn/ 1.pdf&quot;) ?&gt;</span><br></pre></td></tr></table></figure><h3 id="4-解决分页问题"><a href="#4-解决分页问题" class="headerlink" title="4.解决分页问题"></a>4.解决分页问题</h3><p>wkhtmltopdf 很好用，但也有些不尽人意。就是当一个html页面很长我需要在指定的地方分页那怎么办呢？ wkhtmltopdf 开发者在开发的时候并不是没有考虑到这一点，<br>例如下面这个html页面：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;</span><br><span class="line">&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;pdf&lt;/title&gt;</span><br><span class="line">&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line">*&#123; margin:0px; padding:0px;&#125;</span><br><span class="line">div&#123; width:800px; height:1362px;margin:auto;&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div style=&quot; background:#030&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;div style=&quot; background:#033&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;div style=&quot; background:#369&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;div style=&quot; background:#F60&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;div style=&quot; background:#F3C&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;div style=&quot; background:#F0F&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;div style=&quot; background:#0FF&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;div style=&quot; background:#FF0&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;div style=&quot; background:#00F&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;div style=&quot; background:#0F0&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;div style=&quot; background:#033&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;div style=&quot; background:#369&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;div style=&quot; background:#F60&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;div style=&quot; background:#030&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;div style=&quot; background:#033&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;div style=&quot; background:#369&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;div style=&quot; background:#F60&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;div style=&quot; background:#F3C&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;div style=&quot; background:#F0F&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;div style=&quot; background:#0FF&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;div style=&quot; background:#FF0&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;div style=&quot; background:#00F&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;div style=&quot; background:#0F0&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>当我把它生成pdf的时候我想让每个块都是一页，经过无数次调试pdf的一页大约是1362px，但是越往后值就不对了，目前还不知道pdf一页是多少像素。</p><p>但是wkhtmltopdf 有个很好的方法，就是在那个div的样式后添加一个：page-break-inside:avoid;就ok了。</p><p><a href="http://code.google.com/p/wkhtmltopdf/这个是wkhtmltopdf问题交流平台，但是英文的。" target="_blank" rel="noopener">http://code.google.com/p/wkhtmltopdf/这个是wkhtmltopdf问题交流平台，但是英文的。</a></p><h3 id="5-wkhtmltopdf-中文参数详解"><a href="#5-wkhtmltopdf-中文参数详解" class="headerlink" title="5.wkhtmltopdf 中文参数详解"></a>5.wkhtmltopdf 中文参数详解</h3><p>php使用事例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">shell_exec(&quot;wkhtmltopdf --orientation Landscape http://front.dfzx12.com/?r=report/studentgene/id/2 1234567.pdf&quot;);</span><br><span class="line">shell_exec(&quot;wkhtmltopdf --header-center &apos;baobiao&apos; --page-width 50cm --header-line --margin-top 1cm --header-line 1.html oma11.pdf&quot;);</span><br><span class="line">wkhtmltopdf [OPTIONS]... &lt;input file&gt; [More input files] &lt;output file&gt;</span><br></pre></td></tr></table></figure><p>常规选项:</p><ul><li>allow <path>  允许加载从指定的文件夹中的文件或文件（可重复）</path></li><li>book*  设置一会打印一本书的时候，通常设置的选项 </li><li>collate  打印多份副本时整理 </li><li>cookie <name> <value>  设置一个额外的cookie（可重复） </value></name></li><li>cookie-jar <path>  读取和写入的Cookie，并在提供的cookie jar文件 </path></li><li>copies <number>  复印打印成pdf文件数（默认为1） </number></li><li>cover* <url>  使用HTML文件作为封面。它会带页眉和页脚的TOC之前插入 </url></li><li>custom-header <name> <value>  设置一个附加的HTTP头（可重复） </value></name></li><li>debug-javascript  显示的javascript调试输出 </li><li>default-header*  添加一个缺省的头部，与页面的左边的名称，页面数到右边，例如： –header-left ‘[webpage]’ –header-right ‘[page]/[toPage]’  –header-line </li><li>disable-external-links*  禁止生成链接到远程网页</li><li>disable-internal-links*  禁止使用本地链接</li><li>disable-javascript  禁止让网页执行JavaScript </li><li>disable-pdf-compression*  禁止在PDF对象使用无损压缩 </li><li>disable-smart-shrinking*  禁止使用WebKit的智能战略收缩，使像素/ DPI比没有不变 </li><li>disallow-local-file-access  禁止允许转换的本地文件读取其他本地文件，除非explecitily允许用 –allow </li><li>dpi <dpi>  显式更改DPI（这对基于X11的系统没有任何影响） </dpi></li><li>enable-plugins  启用已安装的插件（如Flash</li><li>encoding <encoding>  设置默认的文字编码 </encoding></li><li>extended-help  显示更广泛的帮助，详细介绍了不常见的命令开关 </li><li>forms*  打开HTML表单字段转换为PDF表单域 </li><li>grayscale  PDF格式将在灰阶产生</li><li>help  Display help </li><li>htmldoc  输出程序HTML帮助</li><li>ignore-load-errors  忽略claimes加载过程中已经遇到了一个错误页面 </li><li>lowquality  产生低品质的PDF/ PS。有用缩小结果文档的空间 </li><li>manpage  输出程序手册页 </li><li>margin-bottom <unitreal>  设置页面下边距 (default 10mm) </unitreal></li><li>margin-left <unitreal>  将左边页边距 (default 10mm) </unitreal></li><li>margin-right <unitreal>  设置页面右边距 (default 10mm) </unitreal></li><li>margin-top <unitreal>  设置页面上边距 (default 10mm) </unitreal></li><li>minimum-font-size <int>  最小字体大小 (default 5) </int></li><li>no-background  不打印背景</li><li>orientation <orientation>  设置方向为横向或纵向 </orientation></li><li>page-height <unitreal>  页面高度 (default unit millimeter) </unitreal></li><li>page-offset* <offset>  设置起始页码 (default 1) </offset></li><li>page-size <size>  设置纸张大小: A4, Letter, etc. <ul><li>page-width <unitreal>  页面宽度 (default unit millimeter) </unitreal></li></ul></size></li><li>password <password>  HTTP验证密码 </password></li><li>post <name> <value>  Add an additional post field (repeatable) </value></name></li><li>post-file <name> <path>  Post an aditional file (repeatable) </path></name></li><li>print-media-type*  使用的打印介质类型，而不是屏幕 </li><li>proxy <proxy>  使用代理 </proxy></li><li>quiet  Be less verbose </li><li>read-args-from-stdin  读取标准输入的命令行参数 </li><li>readme  输出程序自述</li><li>redirect-delay <msec>  等待几毫秒为JS-重定向(default 200) </msec></li><li>replace* <name> <value>  替换名称,值的页眉和页脚（可重复） </value></name></li><li>stop-slow-scripts  停止运行缓慢的JavaScripts </li><li>title <text>  生成的PDF文件的标题（第一个文档的标题使用，如果没有指定） </text></li><li>toc*  插入的内容的表中的文件的开头</li><li>use-xserver*  使用X服务器（一些插件和其他的东西没有X11可能无法正常工作） </li><li>user-style-sheet <url>  指定用户的样式表，加载在每一页中</url></li><li>username <username>  HTTP认证的用户名 </username></li><li>version  输出版本信息退出</li><li>zoom <float>  使用这个缩放因子 (default 1) </float></li></ul><p>页眉和页脚选项</p><ul><li>header-center*    <text>    (设置在中心位置的页眉内容)  </text></li><li>header-font-name* <name>    (default Arial)  (设置页眉的字体名称)</name></li><li>header-font-size* <size>    (设置页眉的字体大小)</size></li><li>header-html*  <url> (添加一个HTML页眉,后面是网址)</url></li><li>header-left*  <text>   (左对齐的页眉文本)</text></li><li>header-line*      (显示一条线在页眉下)</li><li>header-right* <text>    (右对齐页眉文本)</text></li><li>header-spacing*   <real>    (设置页眉和内容的距离,默认0)</real></li><li>footer-center*    <text>    (设置在中心位置的页脚内容)  </text></li><li>footer-font-name* <name>    (设置页脚的字体名称) </name></li><li>footer-font-size* <size>    (设置页脚的字体大小default 11)</size></li><li>footer-html*  <url> (添加一个HTML页脚,后面是网址)</url></li><li>footer-left*  <text>    (左对齐的页脚文本)</text></li><li>footer-line*      显示一条线在页脚内容上)</li><li>footer-right* <text>    (右对齐页脚文本)</text></li><li>footer-spacing*   <real>    (设置页脚和内容的距离)<br>./wkhtmltopdf –footer-right ‘[page]/[topage]’ <a href="http://www.baidu.com" target="_blank" rel="noopener">http://www.baidu.com</a> baidu.pdf<br>./wkhtmltopdf –header-center ‘报表’ –header-line –margin-top 2cm –header-line <a href="http://192.168.212.139/oma/" target="_blank" rel="noopener">http://192.168.212.139/oma/</a>  oma.pdf<br>表内容选项中</real></li><li>toc-depth* <level>  Set the depth of the toc (default 3) </level></li><li>toc-disable-back-links*  Do not link from section header to toc </li><li>toc-disable-links*  Do not link from toc to sections </li><li>toc-font-name* <name>  Set the font used for the toc (default Arial) </name></li><li>toc-header-font-name* <name>  The font of the toc header (if unset use- - toc-font-name) </name></li><li>toc-header-font-size* <size>  The font size of the toc header (default 15) </size></li><li>toc-header-text* <text>  The header text of the toc (default Table Of Contents) </text></li><li>toc-l1-font-size* <size>  Set the font size on level 1 of the toc (default 12) </size></li><li>toc-l1-indentation* <num>  Set indentation on level 1 of the toc (default 0) </num></li><li>toc-l2-font-size* <size>  Set the font size on level 2 of the toc (default 10) </size></li><li>toc-l2-indentation* <num>  Set indentation on level 2 of the toc (default 20) </num></li><li>toc-l3-font-size* <size>  Set the font size on level 3 of the toc (default 8) </size></li><li>toc-l3-indentation* <num>  Set indentation on level 3 of the toc (default 40) </num></li><li>toc-l4-font-size* <size>  Set the font size on level 4 of the toc (default 6) </size></li><li>toc-l4-indentation* <num>  Set indentation on level 4 of the toc (default 60) </num></li><li>toc-l5-font-size* <size>  Set the font size on level 5 of the toc (default 4) </size></li><li>toc-l5-indentation* <num>  Set indentation on level 5 of the toc (default 80) </num></li><li>toc-l6-font-size* <size>  Set the font size on level 6 of the toc (default 2) </size></li><li>toc-l6-indentation* <num>  Set indentation on level 6 of the toc (default 100) </num></li><li>toc-l7-font-size* <size>  Set the font size on level 7 of the toc (default 0) </size></li><li>toc-l7-indentation* <num>  Set indentation on level 7 of the toc (default 120) </num></li><li>toc-no-dots*  Do not use dots, in the toc<br>轮廓选项</li><li>dump-outline <file>  转储目录到一个文件</file></li><li>outline  显示目录(文章中h1,h2来定)</li><li>outline-depth <level>  设置目录的深度（默认为4）<br>页脚和页眉</level></li><li>[page]       由当前正在打印的页的数目代替</li><li>[frompage]   由要打印的第一页的数量取代</li><li>[topage]     由最后一页要打印的数量取代</li><li>[webpage]    通过正在打印的页面的URL替换</li><li>[section]    由当前节的名称替换</li><li>[subsection] 由当前小节的名称替换</li><li>[date]       由当前日期系统的本地格式取代</li><li>[time]       由当前时间，系统的本地格式取代<br>./wkhtmltopdf –footer-right ‘[page]/[topage]’ <a href="http://www.baidu.com" target="_blank" rel="noopener">http://www.baidu.com</a> baidu.pdf<br>./wkhtmltopdf –header-center  ‘报表’ –outline  –header-line –margin-top 2cm –header-line <a href="http://www.hao123.com/" target="_blank" rel="noopener">http://www.hao123.com/</a>  hao123.pdf<br>./wkhtmltopdf –header-left ‘[webpage]’ –footer-center ‘测试([page]/[toPage])’ <a href="http://www.baidu.com" target="_blank" rel="noopener">http://www.baidu.com</a> baidu.pdf</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;hr&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;之前有个客户需要把一些html页面生成pdf文件，然后我就找一些用php把html页面围成pdf文件的类。方法是可谓是找了很多很多，什么html2pdf,pdflib,FPDF这些都试过了，但是都没有达到我要的求。&lt;/p&gt;
    
    </summary>
    
      <category term="PHP" scheme="http://yoursite.com/categories/PHP/"/>
    
    
      <category term="PHP生成PDF" scheme="http://yoursite.com/tags/PHP%E7%94%9F%E6%88%90PDF/"/>
    
  </entry>
  
  <entry>
    <title>PHP利用curl实现get、post、put、delete、patch请求</title>
    <link href="http://yoursite.com/2019/01/30/my-phptwo-blog/"/>
    <id>http://yoursite.com/2019/01/30/my-phptwo-blog/</id>
    <published>2019-01-30T01:48:46.000Z</published>
    <updated>2019-12-03T09:58:43.078Z</updated>
    
    <content type="html"><![CDATA[<h1 id="PHP利用curl实现get、post、put、delete、patch请求"><a href="#PHP利用curl实现get、post、put、delete、patch请求" class="headerlink" title="PHP利用curl实现get、post、put、delete、patch请求"></a>PHP利用curl实现get、post、put、delete、patch请求</h1><hr><p>&emsp;&emsp;现在很多web应用都使用restful api的方式来调用，PHP针对put,delete等的方法 也是可以用curl来实现的,代码如下</p><a id="more"></a><h3 id="1-get"><a href="#1-get" class="headerlink" title="1. get"></a>1. get</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">function curl_get($url)&#123;</span><br><span class="line">        $headerArray = array(&quot;Content-type:application/json;&quot;,&quot;Accept:application/json&quot;);</span><br><span class="line">        $ch = curl_init();</span><br><span class="line">        curl_setopt($ch, CURLOPT_URL, $url);</span><br><span class="line">        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, FALSE); </span><br><span class="line">        curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, FALSE); </span><br><span class="line">        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);</span><br><span class="line">        curl_setopt($url,CURLOPT_HTTPHEADER,$headerArray);</span><br><span class="line">        $output = curl_exec($ch);</span><br><span class="line">        curl_close($ch);</span><br><span class="line">        $output = json_decode($output,true);</span><br><span class="line">        return $output;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-post"><a href="#2-post" class="headerlink" title="2. post"></a>2. post</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">function curl_post($url,$data)&#123;</span><br><span class="line">        $data  = json_encode($data);    </span><br><span class="line">        $headerArray =array(&quot;Content-type:application/json;charset=&apos;utf-8&apos;&quot;,&quot;Accept:application/json&quot;);</span><br><span class="line">        $curl = curl_init();</span><br><span class="line">        curl_setopt($curl, CURLOPT_URL, $url);</span><br><span class="line">        curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, FALSE);</span><br><span class="line">        curl_setopt($curl, CURLOPT_SSL_VERIFYHOST,FALSE);</span><br><span class="line">        curl_setopt($curl, CURLOPT_POST, 1);</span><br><span class="line">        curl_setopt($curl, CURLOPT_POSTFIELDS, $data);</span><br><span class="line">        curl_setopt($curl,CURLOPT_HTTPHEADER,$headerArray);</span><br><span class="line">        curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);</span><br><span class="line">        $output = curl_exec($curl);</span><br><span class="line">        curl_close($curl);</span><br><span class="line">        return json_decode($output，true);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-put"><a href="#3-put" class="headerlink" title="3. put"></a>3. put</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">function curl_put($url,$data)&#123;</span><br><span class="line">    $data = json_encode($data);</span><br><span class="line">    $ch = curl_init(); //初始化CURL句柄 </span><br><span class="line">    curl_setopt($ch, CURLOPT_URL, $url); //设置请求的URL</span><br><span class="line">    curl_setopt ($ch, CURLOPT_HTTPHEADER, array(&apos;Content-type:application/json&apos;));</span><br><span class="line">    curl_setopt($ch, CURLOPT_RETURNTRANSFER,1); //设为TRUE把curl_exec()结果转化为字串，而不是直接输出 </span><br><span class="line">    curl_setopt($ch, CURLOPT_CUSTOMREQUEST,&quot;PUT&quot;); //设置请求方式</span><br><span class="line">    curl_setopt($ch, CURLOPT_POSTFIELDS, $data);//设置提交的字符串</span><br><span class="line">    $output = curl_exec($ch);</span><br><span class="line">    curl_close($ch);</span><br><span class="line">    return json_decode($output,true);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-delete"><a href="#4-delete" class="headerlink" title="4. delete"></a>4. delete</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">function curl_del($url,$data)&#123;</span><br><span class="line">    $data  = json_encode($data);</span><br><span class="line">    $ch = curl_init();</span><br><span class="line">    curl_setopt ($ch,CURLOPT_URL,$put_url);</span><br><span class="line">    curl_setopt ($ch, CURLOPT_HTTPHEADER, array(&apos;Content-type:application/json&apos;));</span><br><span class="line">    curl_setopt ($ch, CURLOPT_RETURNTRANSFER, 1);</span><br><span class="line">    curl_setopt ($ch, CURLOPT_CUSTOMREQUEST, &quot;DELETE&quot;);   </span><br><span class="line">    curl_setopt($ch, CURLOPT_POSTFIELDS,$data);</span><br><span class="line">    $output = curl_exec($ch);</span><br><span class="line">    curl_close($ch);</span><br><span class="line">    $output = json_decode($output,true);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-patch"><a href="#5-patch" class="headerlink" title="5. patch"></a>5. patch</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">function curl_patch($url,$data)&#123;    </span><br><span class="line">      $data  = json_encode($data);    </span><br><span class="line">      $ch = curl_init();   </span><br><span class="line">      curl_setopt ($ch,CURLOPT_URL,$url);    </span><br><span class="line">      curl_setopt ($ch, CURLOPT_HTTPHEADER, array(&apos;Content-      type:application/json&apos;));    </span><br><span class="line">      curl_setopt ($ch, CURLOPT_RETURNTRANSFER, 1);    </span><br><span class="line">      curl_setopt ($ch, CURLOPT_CUSTOMREQUEST, &quot;PATCH&quot;);</span><br><span class="line">      curl_setopt($ch, CURLOPT_POSTFIELDS,$data);       </span><br><span class="line">      $output = curl_exec($ch);    </span><br><span class="line">      curl_close($ch);    </span><br><span class="line">      $output = json_decode($output);    </span><br><span class="line">      return $output;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上都是http的调用,https请设置相关的option。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;PHP利用curl实现get、post、put、delete、patch请求&quot;&gt;&lt;a href=&quot;#PHP利用curl实现get、post、put、delete、patch请求&quot; class=&quot;headerlink&quot; title=&quot;PHP利用curl实现get、post、put、delete、patch请求&quot;&gt;&lt;/a&gt;PHP利用curl实现get、post、put、delete、patch请求&lt;/h1&gt;&lt;hr&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;现在很多web应用都使用restful api的方式来调用，PHP针对put,delete等的方法 也是可以用curl来实现的,代码如下&lt;/p&gt;
    
    </summary>
    
      <category term="PHP" scheme="http://yoursite.com/categories/PHP/"/>
    
    
      <category term="PHP-&gt;curl" scheme="http://yoursite.com/tags/PHP-curl/"/>
    
  </entry>
  
  <entry>
    <title>PHP接收json带有汉字  无法接收完整字符串解决</title>
    <link href="http://yoursite.com/2019/01/20/my-phpone-blog/"/>
    <id>http://yoursite.com/2019/01/20/my-phpone-blog/</id>
    <published>2019-01-20T07:48:46.000Z</published>
    <updated>2019-12-05T06:14:19.239Z</updated>
    
    <content type="html"><![CDATA[<h1 id="PHP接收json带有汉字-无法接收完整字符串解决"><a href="#PHP接收json带有汉字-无法接收完整字符串解决" class="headerlink" title="PHP接收json带有汉字  无法接收完整字符串解决"></a>PHP接收json带有汉字  无法接收完整字符串解决</h1><hr><p>&emsp;&emsp;PHP接收json带有汉字 无法全部接收完整的json字符串 终极原因是 因为数据编码格式问题</p><a id="more"></a><p>实例</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$database =  $GLOBALS[&apos;HTTP_RAW_POST_DATA&apos;];  </span><br><span class="line">if(empty($database)) &#123;  </span><br><span class="line">    $database = file_get_contents(&apos;php://input&apos;);</span><br><span class="line">&#125;</span><br><span class="line">$bianma = mb_detect_encoding($database,array(&quot;ASCII&quot;,&apos;UTF-8&apos;,&quot;GB2312&quot;,&quot;GBK&quot;,&apos;BIG5&apos;));  //密码转换</span><br><span class="line">$database = iconv($bianma,&quot;UTF-8&quot;,$database);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;PHP接收json带有汉字-无法接收完整字符串解决&quot;&gt;&lt;a href=&quot;#PHP接收json带有汉字-无法接收完整字符串解决&quot; class=&quot;headerlink&quot; title=&quot;PHP接收json带有汉字  无法接收完整字符串解决&quot;&gt;&lt;/a&gt;PHP接收json带有汉字  无法接收完整字符串解决&lt;/h1&gt;&lt;hr&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;PHP接收json带有汉字 无法全部接收完整的json字符串 终极原因是 因为数据编码格式问题&lt;/p&gt;
    
    </summary>
    
      <category term="PHP" scheme="http://yoursite.com/categories/PHP/"/>
    
    
      <category term="PHP &amp; Josn" scheme="http://yoursite.com/tags/PHP-Josn/"/>
    
  </entry>
  
  <entry>
    <title>PHP 二进制文件写入存储</title>
    <link href="http://yoursite.com/2019/01/14/my-php-blog/"/>
    <id>http://yoursite.com/2019/01/14/my-php-blog/</id>
    <published>2019-01-14T06:09:31.000Z</published>
    <updated>2019-08-15T07:59:33.685Z</updated>
    
    <content type="html"><![CDATA[<h1 id="PHP接收二进制数据"><a href="#PHP接收二进制数据" class="headerlink" title="PHP接收二进制数据"></a>PHP接收二进制数据</h1><hr><p>&emsp;&emsp;需求：对方给我推送的心电图 需要我来接收并返回相应的路径<br>&emsp;&emsp;PHP HTTP接收POST数据分为三种</p><ol><li><strong>$_POST</strong> 方式接受数据<br>&emsp;&emsp;$_POST 方式是由通过HTTP的POST方法传递过来的数据组成的数组,是一个自动全局变量.<br>注:只能接收Content-Type:application/x-www-form-urlencode提交的数据.也就是只能接收表单POST过来的数据.</li></ol><a id="more"></a><ol start="2"><li><p><strong>GLOBLES[‘HTTP_RAW_POST_DATA’];</strong><br>&emsp;&emsp;如果访问原始POST数据不是php能够识别的文档类型, 比如:text/xml 或者soap等等,我们可以用$GLOBLES[‘HTTP_RAW_POST_DATA’]来接收,$HTTP_RAW_POST_DATA变量包含有原始POST数据.此变量仅在碰到未识别的MIME数据时产生.<br>&emsp;&emsp;注: $HTTP_RAW_POST_DATA对于enctype=”multipart/form-data”表单数据不可用,也就是说使用$HTTP_RAW_POST_DATA无法接受网页表单post过来的数据.</p></li><li><p><strong>file_get_contents(“php://input”);</strong><br>&emsp;&emsp;如果访问原始POST数据, 更好的方法是使用file_get_content(“php://input”); 对于未指定Content-Type的POST数据,可以使用该方法读取POST原始数据,包括二进制流也可以.和$HTTP_RAW_POST_DATA比起来.它带来的生存眼里更小,并且不需要任何特殊的php.ini设置.<br>&emsp;&emsp;注: php://input不能用于 enctype=”multipart/form-data”.<br>&emsp;&emsp;例如:<br>&emsp;&emsp;$postStr = file_get_contents(“php://input”); //获取POST数据</p></li></ol><hr><p>&emsp;&emsp;我用的是最后一种   file_get_contents(“php://input”);</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">$imgDir = &apos;yufenbmp/&apos;;                           //要创建储存图片的文件夹</span><br><span class="line">$filename=date(&apos;YmdHis&apos;).rand(1000,9999).&quot;.png&quot;; //要生成的图片名字 </span><br><span class="line">$xmlstr =  $GLOBALS[&apos;HTTP_RAW_POST_DATA&apos;];       //第一种接收方式</span><br><span class="line">if(empty($xmlstr)) &#123;                             //如果上边的方法接不到数据 走下边的方法</span><br><span class="line">    $xmlstr = file_get_contents(&apos;php://input&apos;);  //第二种接收方式</span><br><span class="line">&#125;  </span><br><span class="line">if(empty($xmlstr))                               //判断是否有二进制数据进来</span><br><span class="line">&#123;  </span><br><span class="line">    echo &apos;nostream&apos;;                             //没有 者输出文案</span><br><span class="line">    exit();  </span><br><span class="line">&#125;  </span><br><span class="line">$file = fopen(&quot;D:/website/phpweb/member.ekangcn.com/&quot;.$imgDir.$filename,&quot;w&quot;);//打开文件准备写入  </span><br><span class="line">fwrite($file,$jpg);   //写入  </span><br><span class="line">fclose($file);        //关闭  </span><br><span class="line"></span><br><span class="line">$filePath = &apos;http://xxxx.xxxxx.com/&apos;.$imgDir.$filename;  </span><br><span class="line">echo $filePath; exit;//输出路径</span><br><span class="line">//图片是否存在  </span><br><span class="line">if(!file_exists($filePath))  </span><br><span class="line">&#123;  </span><br><span class="line">    echo &apos;createFail&apos;;  </span><br><span class="line">    exit();  </span><br><span class="line">&#125;else&#123;</span><br><span class="line">echo &apos;nocreateFail&apos;;</span><br><span class="line">exit();  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;PHP接收二进制数据&quot;&gt;&lt;a href=&quot;#PHP接收二进制数据&quot; class=&quot;headerlink&quot; title=&quot;PHP接收二进制数据&quot;&gt;&lt;/a&gt;PHP接收二进制数据&lt;/h1&gt;&lt;hr&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;需求：对方给我推送的心电图 需要我来接收并返回相应的路径&lt;br&gt;&amp;emsp;&amp;emsp;PHP HTTP接收POST数据分为三种&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;$_POST&lt;/strong&gt; 方式接受数据&lt;br&gt;&amp;emsp;&amp;emsp;$_POST 方式是由通过HTTP的POST方法传递过来的数据组成的数组,是一个自动全局变量.&lt;br&gt;注:只能接收Content-Type:application/x-www-form-urlencode提交的数据.也就是只能接收表单POST过来的数据.&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="PHP" scheme="http://yoursite.com/categories/PHP/"/>
    
    
      <category term="PHP" scheme="http://yoursite.com/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>Hexo基础介绍</title>
    <link href="http://yoursite.com/2019/01/12/my-first-blog/"/>
    <id>http://yoursite.com/2019/01/12/my-first-blog/</id>
    <published>2019-01-12T09:03:28.000Z</published>
    <updated>2021-06-10T10:58:54.059Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-前言"><a href="#1-前言" class="headerlink" title="1.前言"></a>1.前言</h1><hr><p>&emsp;&emsp;使用github pages服务搭建博客的好处有：</p><ol><li>全是静态文件，访问速度快；</li><li>免费方便，不用花一分钱就可以搭建一个自由的个人博客，不需要服务器不需要后台；</li><li>可以随意绑定自己的域名，不仔细看的话根本看不出来你的网站是基于github的；</li></ol><a id="more"></a><ol start="4"><li>数据绝对安全，基于github的版本管理，想恢复到哪个历史版本都行；</li><li>博客内容可以轻松打包、转移、发布到其它平台；</li><li>等等；</li></ol><h3 id="1-1-准备工作"><a href="#1-1-准备工作" class="headerlink" title="1.1. 准备工作"></a>1.1. 准备工作</h3><hr><p>&emsp;&emsp;在开始一切之前，你必须已经：</p><ul><li>有一个github账号，没有的话去注册一个；</li><li>安装了node.js、npm，并了解相关基础知识；</li><li>安装了git for windows（或者其它git客户端）<br>本文所使用的环境：</li><li>Windows10</li><li><a href="mailto:node.js@10.10.0" target="_blank" rel="noopener">node.js@10.10.0</a></li><li><a href="mailto:git@2.19.1" target="_blank" rel="noopener">git@2.19.1</a></li><li><a href="mailto:hexo@5.1.4" target="_blank" rel="noopener">hexo@5.1.4</a></li></ul><h1 id="2-搭建github博客"><a href="#2-搭建github博客" class="headerlink" title="2. 搭建github博客"></a>2. 搭建github博客</h1><h3 id="2-1-创建仓库"><a href="#2-1-创建仓库" class="headerlink" title="2.1. 创建仓库"></a>2.1. 创建仓库</h3><hr><p>&emsp;&emsp;新建一个名为你的用户名.github.io的仓库，比如说，如果你的github用户名是test，那么你就新建test.github.io的仓库（必须是你的用户名，其它名称无效），将来你的网站访问地址就是 <a href="http://test.github.io" target="_blank" rel="noopener">http://test.github.io</a> 了，是不是很方便？</p><p>&emsp;&emsp;由此可见，每一个github账户最多只能创建一个这样可以直接使用域名访问的仓库。</p><p>&emsp;&emsp;几个注意的地方：</p><ol><li>注册的邮箱一定要验证，否则不会成功；</li><li>仓库名字必须是：username.github.io，其中username是你的用户名；</li><li>仓库创建成功不会立即生效，需要过一段时间，大概10-30分钟，或者更久，我的等了半个小时才生效；</li></ol><p>&emsp;&emsp;创建成功后，默认会在你这个仓库里生成一些示例页面，以后你的网站所有代码都是放在这个仓库里啦。</p><h1 id="3-配置SSH-key"><a href="#3-配置SSH-key" class="headerlink" title="3.配置SSH key"></a>3.配置SSH key</h1><hr><p>&emsp;&emsp;为什么要配置这个呢？因为你提交代码肯定要拥有你的github权限才可以，但是直接使用用户名和密码太不安全了，所以我们使用ssh key来解决本地和服务器的连接问题。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cd ~/. ssh #检查本机已存在的ssh密钥</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;如果提示：No such file or directory 说明你是第一次使用git。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;邮件地址&quot;</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;然后连续3次回车，最终会生成一个文件在用户目录下，打开用户目录，找到.ssh\id_rsa.pub文件，记事本打开并复制里面的内容，打开你的github主页，进入个人设置 -&gt; SSH and GPG keys -&gt; New SSH key：<br><img src="http://setbo.ekangcn.com/ssh.png" alt="image"><br>&emsp;&emsp;将刚复制的内容粘贴到key那里，title随便填，保存。</p><h3 id="3-1-测试是否成功"><a href="#3-1-测试是否成功" class="headerlink" title="3.1. 测试是否成功"></a>3.1. 测试是否成功</h3><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh -T git@github.com # 注意邮箱地址不用改</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;如果提示<code>Are you sure you want to continue connecting (yes/no)?</code>，输入yes，然后会看到：</p><blockquote><p>Hi liuxianan! You’ve successfully authenticated, but GitHub does not provide shell access.</p></blockquote><p>&emsp;&emsp;看到这个信息说明SSH已配置成功！<br>&emsp;&emsp;此时你还需要配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name &quot;liuxianan&quot;// 你的github用户名，非昵称</span><br><span class="line">$ git config --global user.email  &quot;xxx@qq.com&quot;// 填写你的github注册邮箱</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;具体这个配置是干嘛的我没仔细深究。</p><h1 id="4-使用hexo写博客"><a href="#4-使用hexo写博客" class="headerlink" title="4.使用hexo写博客"></a>4.使用hexo写博客</h1><h3 id="4-1-hexo简介"><a href="#4-1-hexo简介" class="headerlink" title="4.1. hexo简介"></a>4.1. hexo简介</h3><hr><p>&emsp;&emsp;Hexo是一个简单、快速、强大的基于 Github Pages 的博客发布工具，支持Markdown格式，有众多优秀插件和主题。<br>&emsp;&emsp;官网： <a href="http://hexo.io" target="_blank" rel="noopener">http://hexo.io</a><br>&emsp;&emsp;github: <a href="https://github.com/hexojs/hexo" target="_blank" rel="noopener">https://github.com/hexojs/hexo</a></p><h3 id="4-2-原理"><a href="#4-2-原理" class="headerlink" title="4.2. 原理"></a>4.2. 原理</h3><hr><p>&emsp;&emsp;由于github pages存放的都是静态文件，博客存放的不只是文章内容，还有文章列表、分类、标签、翻页等动态内容，假如每次写完一篇文章都要手动更新博文目录和相关链接信息，相信谁都会疯掉，所以hexo所做的就是将这些md文件都放在本地，每次写完文章后调用写好的命令来批量完成相关页面的生成，然后再将有改动的页面提交到github。</p><h3 id="4-3-注意事项"><a href="#4-3-注意事项" class="headerlink" title="4.3. 注意事项"></a>4.3. 注意事项</h3><hr><p>&emsp;&emsp;安装之前先来说几个注意事项：</p><ol><li>很多命令既可以用Windows的cmd来完成，也可以使用git bash来完成，但是部分命令会有一些问题，为避免不必要的问题，建议全部使用git bash来执行；</li><li>hexo不同版本差别比较大，网上很多文章的配置信息都是基于2.x的，所以注意不要被误导；</li><li>hexo有2种<strong>_config.yml</strong>文件，一个是根目录下的全局的<strong>_config.yml</strong>，一个是各个<strong>theme</strong>下的；</li></ol><h3 id="4-4-安装"><a href="#4-4-安装" class="headerlink" title="4.4. 安装"></a>4.4. 安装</h3><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo</span><br></pre></td></tr></table></figure><h3 id="4-5-初始化"><a href="#4-5-初始化" class="headerlink" title="4.5. 初始化"></a>4.5. 初始化</h3><hr><p>&emsp;&emsp;在电脑的某个地方新建一个名为hexo的文件夹（名字可以随便取），比如我的是F:\Workspaces\hexo，由于这个文件夹将来就作为你存放代码的地方，所以最好不要随便放。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cd /f/Workspaces/hexo/</span><br><span class="line">$ hexo init</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;hexo会自动下载一些文件到这个目录，包括node_modules，目录结构如下图：</p><p><img src="http://setbo.ekangcn.com/mul1.png" alt="image"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g # 生成</span><br><span class="line">$ hexo s # 启动服务</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;执行以上命令之后，hexo就会在public文件夹生成相关html文件，这些文件将来都是要提交到github去的：</p><p><img src="http://setbo.ekangcn.com/mul2.png" alt="image"></p><p>&emsp;&emsp;<strong>hexo s</strong>是开启本地预览服务，打开浏览器访问 <a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a> 即可看到内容，很多人会碰到浏览器一直在转圈但是就是加载不出来的问题，一般情况下是因为端口占用的缘故，因为4000这个端口太常见了，解决端口冲突问题请参考这篇文章：<br>&emsp;&emsp;<a href="http://blog.liuxianan.com/windows-port-bind.html" target="_blank" rel="noopener">http://blog.liuxianan.com/windows-port-bind.html</a></p><p>&emsp;&emsp;第一次初始化的时候hexo已经帮我们写了一篇名为 Hello World 的文章，默认的主题比较丑</p><h3 id="4-6-修改主题"><a href="#4-6-修改主题" class="headerlink" title="4.6. 修改主题"></a>4.6. 修改主题</h3><hr><p>&emsp;&emsp;既然默认主题很丑，那我们别的不做，首先来替换一个好看点的主题。这是 官方主题。</p><p>&emsp;&emsp;个人比较喜欢的2个主题：hexo-theme-jekyll 和 hexo-theme-yilia。</p><p>&emsp;&emsp;首先下载这个主题：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cd /f/Workspaces/hexo/</span><br><span class="line">$ git clone https://github.com/litten/hexo-theme-yilia.git themes/yilia</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;下载后的主题都在这里：</p><p><img src="http://setbo.ekangcn.com/zhuti.png" alt="image"></p><p>&emsp;&emsp;修改<strong>_config.yml</strong>中的<strong>theme: landscape</strong>改为<strong>theme: yilia</strong>，然后重新执行<strong>hexo g</strong>来重新生成。<br>&emsp;&emsp;如果出现一些莫名其妙的问题，可以先执行<strong>hexo clean</strong>来清理一下public的内容，然后再来重新生成和发布。</p><h3 id="4-7-上传之前"><a href="#4-7-上传之前" class="headerlink" title="4.7. 上传之前"></a>4.7. 上传之前</h3><hr><p>&emsp;&emsp;在上传代码到github之前，一定要记得先把你以前所有代码下载下来（虽然github有版本管理，但备份一下总是好的），因为从hexo提交代码时会把你以前的所有代码都删掉。</p><h3 id="4-8-上传到github"><a href="#4-8-上传到github" class="headerlink" title="4.8. 上传到github"></a>4.8. 上传到github</h3><hr><p>&emsp;&emsp;如果你一切都配置好了，发布上传很容易，一句hexo d就搞定，当然关键还是你要把所有东西配置好。</p><p>&emsp;&emsp;首先，ssh key肯定要配置好。</p><p>&emsp;&emsp;其次，配置_config.yml中有关deploy的部分：</p><p>&emsp;&emsp;正确写法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: git@github.com:liuxianan/liuxianan.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;错误写法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: github</span><br><span class="line">  repository: https://github.com/liuxianan/liuxianan.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;后面一种写法是hexo2.x的写法，现在已经不行了，无论是哪种写法，此时直接执行hexo d的话一般会报如下错误：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Deployer not found: github 或者 Deployer not found: git</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;原因是还需要安装一个插件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;其它命令不确定，部署这个命令一定要用<strong>git bash</strong>，否则会提示<strong>Permission denied (publickey)</strong>.</p><p>&emsp;&emsp;打开你的git bash，输入hexo d就会将本次有改动的代码全部提交，没有改动的不会：</p><p><img src="http://setbo.ekangcn.com/hexod.png" alt="image"></p><h3 id="4-9-保留CNAME、README-md等文件"><a href="#4-9-保留CNAME、README-md等文件" class="headerlink" title="4.9. 保留CNAME、README.md等文件"></a>4.9. 保留CNAME、README.md等文件</h3><hr><p>&emsp;&emsp;提交之后网页上一看，发现以前其它代码都没了，此时不要慌，一些非md文件可以把他们放到source文件夹下，这里的所有文件都会原样复制（除了md文件）到public目录的：</p><p><img src="http://setbo.ekangcn.com/mul3.png" alt="image"></p><p>&emsp;&emsp;由于hexo默认会把所有md文件都转换成html，包括README.md，所有需要每次生成之后、上传之前，手动将README.md复制到public目录，并删除README.html。</p><h3 id="4-10-常用hexo命令"><a href="#4-10-常用hexo命令" class="headerlink" title="4.10. 常用hexo命令"></a>4.10. 常用hexo命令</h3><hr><p>&emsp;&emsp;常见命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">hexo new &quot;postName&quot; #新建文章</span><br><span class="line">hexo new page &quot;pageName&quot; #新建页面</span><br><span class="line">hexo generate #生成静态页面至public目录</span><br><span class="line">hexo server #开启预览访问端口（默认端口4000，&apos;ctrl + c&apos;关闭server）</span><br><span class="line">hexo deploy #部署到GitHub</span><br><span class="line">hexo help  # 查看帮助</span><br><span class="line">hexo version  #查看Hexo的版本</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;缩写：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo n == hexo new</span><br><span class="line">hexo g == hexo generate</span><br><span class="line">hexo s == hexo server</span><br><span class="line">hexo d == hexo deploy</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;组合命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo s -g #生成并本地预览</span><br><span class="line">hexo d -g #生成并上传</span><br></pre></td></tr></table></figure><h3 id="4-11-config-yml"><a href="#4-11-config-yml" class="headerlink" title="4.11. _config.yml"></a>4.11. _config.yml</h3><hr><p>&emsp;&emsp;这里面都是一些全局配置，每个参数的意思都比较简单明了，所以就不作详细介绍了。</p><p>&emsp;&emsp;需要特别注意的地方是，冒号后面必须有一个空格，否则可能会出问题。</p><h3 id="4-12-写博客"><a href="#4-12-写博客" class="headerlink" title="4.12. 写博客"></a>4.12. 写博客</h3><hr><p>&emsp;&emsp;定位到我们的hexo根目录，执行命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new &apos;my-first-blog&apos;</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;hexo会帮我们在<strong>_posts</strong>下生成相关md文件：</p><p><img src="http://setbo.ekangcn.com/blog.png" alt="image"></p><p>&emsp;&emsp;我们只需要打开这个文件就可以开始写博客了，默认生成如下内容：</p><p><img src="http://setbo.ekangcn.com/blog1.png" alt="image"></p><p>&emsp;&emsp;当然你也可以直接自己新建md文件，用这个命令的好处是帮我们自动生成了时间。</p><p>&emsp;&emsp;一般完整格式如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: postName #文章页面上的显示名称，一般是中文</span><br><span class="line">date: 2013-12-02 15:30:16 #文章生成时间，一般不改，当然也可以任意修改</span><br><span class="line">categories: 默认分类 #分类</span><br><span class="line">tags: [tag1,tag2,tag3] #文章标签，可空，多标签请用格式，注意:后面有个空格</span><br><span class="line">description: 附加一段文章摘要，字数最好在140字以内，会出现在meta的description里面</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">以下是正文</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;那么<strong>hexo new page ‘postName’</strong>命令和<strong>hexo new ‘postName’</strong>有什么区别呢？</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page &quot;my-second-blog&quot;</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;生成如下：<br><img src="http://setbo.ekangcn.com/blog2.png" alt="image"></p><p>&emsp;&emsp;最终部署时生成：<strong>hexo\public\my-second-blog\index.html</strong>，但是它不会作为文章出现在博文目录。</p><h6 id="4-12-1-写博客工具"><a href="#4-12-1-写博客工具" class="headerlink" title="4.12.1. 写博客工具"></a>4.12.1. 写博客工具</h6><p>&emsp;&emsp;那么用什么工具写博客呢？这个我还没去找，以前自己使用<strong>editor.md</strong>简单弄了个，大家有好用的hexo写博客工具可以推荐个。</p><h6 id="4-12-2-如何让博文列表不显示全部内容"><a href="#4-12-2-如何让博文列表不显示全部内容" class="headerlink" title="4.12.2. 如何让博文列表不显示全部内容"></a>4.12.2. 如何让博文列表不显示全部内容</h6><p>&emsp;&emsp;默认情况下，生成的博文目录会显示全部的文章内容，如何设置文章摘要的长度呢？<br>&emsp;&emsp;答案是在合适的位置加上<strong><!--more--></strong>即可，例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># 前言</span><br><span class="line"></span><br><span class="line">使用github pages服务搭建博客的好处有：</span><br><span class="line"></span><br><span class="line">1. 全是静态文件，访问速度快；</span><br><span class="line">2. 免费方便，不用花一分钱就可以搭建一个自由的个人博客，不需要服务器不需要后台；</span><br><span class="line">3. 可以随意绑定自己的域名，不仔细看的话根本看不出来你的网站是基于github的；</span><br><span class="line"></span><br><span class="line">&lt;!--more--&gt;</span><br><span class="line"></span><br><span class="line">4. 数据绝对安全，基于github的版本管理，想恢复到哪个历史版本都行；</span><br><span class="line">5. 博客内容可以轻松打包、转移、发布到其它平台；</span><br><span class="line">6. 等等；</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;最终效果：<br><img src="http://setbo.ekangcn.com/blog3.jpg" alt="image"></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;1-前言&quot;&gt;&lt;a href=&quot;#1-前言&quot; class=&quot;headerlink&quot; title=&quot;1.前言&quot;&gt;&lt;/a&gt;1.前言&lt;/h1&gt;&lt;hr&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;使用github pages服务搭建博客的好处有：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;全是静态文件，访问速度快；&lt;/li&gt;
&lt;li&gt;免费方便，不用花一分钱就可以搭建一个自由的个人博客，不需要服务器不需要后台；&lt;/li&gt;
&lt;li&gt;可以随意绑定自己的域名，不仔细看的话根本看不出来你的网站是基于github的；&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="Hexo" scheme="http://yoursite.com/categories/Hexo/"/>
    
    
      <category term="Hexo介绍" scheme="http://yoursite.com/tags/Hexo%E4%BB%8B%E7%BB%8D/"/>
    
  </entry>
  
</feed>
